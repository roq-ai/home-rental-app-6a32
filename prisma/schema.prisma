generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model booking {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date        DateTime  @db.Date
  end_date          DateTime  @db.Date
  num_of_guest      Int?      @db.Integer
  num_of_night      String    @db.VarChar(255)
  total_price       String    @db.VarChar(255)
  roqConversationId String?   @db.Uuid
  guest_id          String?   @db.Uuid
  property_id       String?   @db.Uuid
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  user              user?     @relation(fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  property          property? @relation(fields: [property_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  property    property[]
}

model property {
  id           String                               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String                               @db.VarChar(255)
  description  String?                              @db.VarChar(255)
  price        String                               @db.VarChar(255)
  num_of_guest Int?                                 @db.Integer
  num_of_beds  String                               @db.VarChar(255)
  num_of_baths String                               @db.VarChar(255)
  amenities    String[]                             @db.VarChar(255)
  image_urls   String[]
  type         String                               @db.VarChar(255)
  coords       Unsupported("geometry(Point, 4326)")?

  location   String?   @db.VarChar(255)
  longitude  String    @db.VarChar(255)
  latitude   String    @db.VarChar(255)
  company_id String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  booking    booking[]
  company    company?  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // the index for that column
  @@index([coords], name: "location_idx", type: Gist)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  company     company[]
}
